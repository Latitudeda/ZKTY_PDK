layers.py
==============

The layers are auto-generated by filling the ``layers.csv`` file, ``FLYLINE_MARK`` / ``ERROR_MARK`` layer are defined by **Latitudeda** for error display.

::

    class LAYER(TECH.LAYER):
        FE_wg = Layer(PROCESS.FE_wg, PURPOSE.DRW, 'Fully etched Si strip waveguide, including the special patterns')
        G_mark = Layer(PROCESS.G_mark, PURPOSE.DRW, 'Global alignment mark')
        FE_sur = Layer(PROCESS.FE_sur, PURPOSE.DRW, 'Fully etched Si strip waveguide surrounding with 8um total offset (4um each side)')
        ME_wg = Layer(PROCESS.ME_wg, PURPOSE.DRW, 'Mediumly etched (e.g., 130-170nm TBD) Si rib waveguide, including the special patterns')
        L_mark = Layer(PROCESS.L_mark, PURPOSE.DRW, 'Local alignment mark')
        ME_sur = Layer(PROCESS.ME_sur, PURPOSE.DRW, 'Mediumly etched (e.g., 130-170nm TBD) Si slab waveguide surrounding with 8um total offset (4um each side)')
        ME1_wg = Layer(PROCESS.ME1_wg, PURPOSE.DRW, 'Mediumly etched Si rib waveguide with user-defined etch depth differerent from Layer 7/0')
        ME1_sur = Layer(PROCESS.ME1_sur, PURPOSE.DRW, 'Mediumly etched Si slab waveguide with user-defined etch depth surrounding with 8um total offset (4um each side)')
        SE_wg = Layer(PROCESS.SE_wg, PURPOSE.DRW, '70nm shallow etched Si waveguide (VGC)')
        SE_sur = Layer(PROCESS.SE_sur, PURPOSE.DRW, '70nm shallow etched Si waveguide (VGC) surrounding with 2um each side')
        BOX_passive = Layer(PROCESS.BOX_passive, PURPOSE.DRW, 'Black box for passive devices')
        BOX_passive_label = Layer(PROCESS.BOX_passive_label, PURPOSE.DRW, 'Black box for passive devices text\nBLACKBOX Optical Ports for Si?\nBLACKBOX Optical Ports for Fiber?')
        HEATER_Ti = Layer(PROCESS.HEATER_Ti, PURPOSE.DRW, 'Ti heater')
        M1_Al = Layer(PROCESS.M1_Al, PURPOSE.DRW, 'Metal 1 (aluminum)')
        M1_others = Layer(PROCESS.M1_others, PURPOSE.DRW, 'M1 dummy area\nM1 dummy block area\nM1 slot\nM1 slot block area')
        PAD = Layer(PROCESS.PAD, PURPOSE.DRW, 'Al bondpad')
        ISL = Layer(PROCESS.ISL, PURPOSE.DRW, 'Trench for thermal isolation')
        Open = Layer(PROCESS.Open, PURPOSE.DRW, 'Open window for air trench')
        DETCH = Layer(PROCESS.DETCH, PURPOSE.DRW, 'Deep etching for edge coupler')
        LOGO = Layer(PROCESS.LOGO, PURPOSE.DRW, 'Logo and text on FETCH, M1 and M2')
        NOFILL = Layer(PROCESS.NOFILL, PURPOSE.DRW, 'No FEOL dummy filling area\nWaveguide Rib\nMetal')
        TXT = Layer(PROCESS.TXT, PURPOSE.DRW, 'Text label (Non-tapeout, only for indication)')
        PinRec = Layer(PROCESS.PinRec, PURPOSE.DRW, 'Pin (for port pin indications).')
        DA = Layer(PROCESS.DA, PURPOSE.DRW, 'Design area')
        DevRec = Layer(PROCESS.DevRec, PURPOSE.DRW, 'Device recognition')
        FbrTgt = Layer(PROCESS.FbrTgt, PURPOSE.DRW, 'Fiber target indication')
        EXCL_DRC = Layer(PROCESS.EXCL_DRC, PURPOSE.DRW, 'DRC exclusion layer')
        FLYLINE_MARK = Layer(PROCESS.FLYLINE, PURPOSE.MARK, 'Flyline for insufficient space in AutoLink')
        ERROR_MARK = Layer(PROCESS.ERROR, PURPOSE.MARK, 'Error mark')



For users using layout viewers (e.g. KLayout), they can import the layer properties file ``layers.lyp`` in the file folder.